import AsyncStorage from '@react-native-async-storage/async-storage';
import { Game } from '../models/game';

const STORAGE_KEY = '@games_storage';

export const storageService = {
  // –ó–±–µ—Ä–µ–≥—Ç–∏ —ñ–≥—Ä–∏
  async saveGames(games: Game[]): Promise<void> {
    try {
      const jsonValue = JSON.stringify(games);
      await AsyncStorage.setItem(STORAGE_KEY, jsonValue);
      console.log('‚úÖ –Ü–≥—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ AsyncStorage');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–≥–æ—Ä:', error);
      throw error;
    }
  },

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ–≥—Ä–∏
  async loadGames(): Promise<Game[] | null> {
    try {
      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY);
      if (jsonValue !== null) {
        const games = JSON.parse(jsonValue);
        console.log('‚úÖ –Ü–≥—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ AsyncStorage:', games.length);
        return games;
      }
      console.log('‚ÑπÔ∏è –ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —ñ–≥–æ—Ä');
      return null;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–≥–æ—Ä:', error);
      throw error;
    }
  },

  // –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ —ñ–≥—Ä–∏ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
  async clearGames(): Promise<void> {
    try {
      await AsyncStorage.removeItem(STORAGE_KEY);
      console.log('üóëÔ∏è –í—Å—ñ —ñ–≥—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ AsyncStorage');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ–≥–æ—Ä:', error);
      throw error;
    }
  },

  // –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä —Å—Ö–æ–≤–∏—â–∞ (–¥–ª—è –¥–µ–±–∞–≥—É)
  async getStorageSize(): Promise<string> {
    try {
      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY);
      if (jsonValue) {
        const bytes = new Blob([jsonValue]).size;
        return `${(bytes / 1024).toFixed(2)} KB`;
      }
      return '0 KB';
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É:', error);
      return 'Unknown';
    }
  },
};
